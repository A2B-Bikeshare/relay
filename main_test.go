package relay

import (
	"errors"
	"fmt"
	"testing"
)

func TestNewValid(t *testing.T) {
	c := &Config{
		Domain: "www.test.com",
		To:     "recipient@example.com",
		From:   "sender@example.com",
		Key:    "someapikey",
	}

	r, err := New(c)

	if err != nil {
		t.Errorf("Expected no errors, recieved error: %#v\n", err)
	}

	if r.domain != c.Domain {
		t.Errorf("Relay Domain: %s did not match Config Domain: %s\n", r.domain, c.Domain)
	}
	if r.to != c.To {
		t.Errorf("Relay To: %s did not match Config To: %s\n", r.to, c.To)
	}
	if r.from != c.From {
		t.Errorf("Relay From: %s did not match Config From: %s\n", r.from, c.From)
	}
	if r.key != c.Key {
		t.Errorf("Relay Key: %s did not match Config Key: %s\n", r.key, c.Key)
	}
}

func TestNewInvalid(t *testing.T) {
	// Note, there is no Key
	c := &Config{
		Domain: "www.test.com",
		To:     "butts@example.com",
		From:   "sttub@example.com",
	}

	r, err := New(c)
	if err != ErrBadConfig {
		t.Errorf("Expected ErrBadConfig, but got: %#v\n", err)
	}

	if r != nil {
		t.Errorf("Expected Relay to be nil, but it was not")
	}
}

// TestConfigJson passes trivially if config.json does not exist
func TestConfigJson(t *testing.T) {
	_, err := New(nil)
	if err == ErrNoConfig {
		fmt.Println("You have no config.json")
		return
	}

	if err != nil {
		t.Errorf("config.json is not properly formatted\nGot error: %#v", err)
	}
}

func TestSendFailure(t *testing.T) {
	c := &Config{
		Domain: "www.test.com",
		To:     "recipient@example.com",
		From:   "sender@example.com",
		Key:    "fakeapikey",
	}

	r, err := New(c)
	if err != nil {
		t.Errorf("Could not successfully create client")
	}

	testErr := errors.New("This is an error generated by testing")
	err = r.Send("TestSendFailure", testErr)
	if err == nil {
		t.Errorf("Request POSTed successfully without a valid api key")
	}
}

// TestSendSuccess passes trivially if config.json does not exist
func TestSendSuccess(t *testing.T) {
	r, err := New(nil)
	if err == ErrNoConfig {
		fmt.Println("You have no config.json")
		return
	}

	if err != nil {
		t.Errorf("Could not successfully create client")
	}

	testErr := errors.New("This is an error generated by testing")
	err = r.Send("TestSendSuccess", testErr)
	if err != nil {
		t.Errorf("Email could not be sent")
	}
}
